def Range_Function():
    print('\nThe range() function has two sets of parameters, as follows: '
          '\nrange(stop)'
          '\n\tstop: Number of integers (whole numbers) \n'
          '\tto generate, starting from zero. eg. \n'
          '\trange(3) == [0, 1, 2].\n'
          '\nrange([start], stop,[step])\n'
          '\tstart: Starting number of the sequence.\n'
          '\tstop: Generate numbers up to, but not including this number.\n'
          '\tstep: Difference between each number in the sequence.')
    print('\nNote that: '
          '\n\t* All parameters must be integers. \n'
          '\t* All parameters can be positive or negative.\n'
          '\t* The function \'range()\' (and Python in general) is 0-index based, '
          '\n\t\tmeaning list indexes start at 0, not 1. eg. The syntax '
          '\n\t\tto access the first element of a list is mylist[0]. '
          '\n\t\tTherefore the last integer generated by range() is up '
          '\n\t\tto, but not including, stop. For example range(0, 5) '
          '\n\t\tgenerates integers from 0 up to, but not including, 5.')

    print("\nExample 1: 'for i in range(5)' returns:")
    for i in range(5):
        print('\t', i, end=',')

    print("\n\nExample 2: 'for i in range(5,10)' returns:")
    for i in range(5,10):
        print('\t', i, end=',')

    print("\n\nExample 3: 'for i in range(0,10,3)' returns:")
    for i in range(0, 10, 3):
        print('\t', i, end=',')

    print("\n\nExample 4: 'for i in range(-10,-100,-30)' returns:")
    for i in range(-10, -100, -30):
        print('\t', i, end=',')

    print("\n\nExample 5: If a = ['Mary','had', 'a', 'little', 'lamb'] "
          "then 'for i in range(lin(a))' returns:")
    a = ['Mary', 'had', 'a', 'little', 'lamb']
    for i in range(len(a)):
        print(i, a[i])

    print("\nExample 6 : However 'print(range(10))' strangely returns:", end=' ')
    print(range(10), "\n\t\t\tThis is called an 'iterable' object that is suitable"
                     "\n\t\t\tas a target for functions and constructs, like the 'for' statement"
                     "\n\t\t\tas in the previous examples.")

    print("\nExample 7: Using range() as an argument for a function, 'sum(range(4)' returns:", end='\t')
    print(sum(range(4)))

    print("\nExample 8: Using range() to create a list, 'list(range(4)' returns:", end='\t')
    print(list(range(4)))

